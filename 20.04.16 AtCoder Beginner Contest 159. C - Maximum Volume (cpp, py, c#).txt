/******************************************c++
* 20.04.16 AtCoder Beginner Contest 159. C - Maximum Volume
* 
* 
*********************************************/
/*********************************************
 
問題文
正の整数Lが与えられます。縦、横、高さの長さ
(それぞれ、整数でなくてもかまいません)
の合計がLの直方体としてありうる体積の最大値を求めてください。

::test input::
999

*********************************************/
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define rep(i,n) for(int (i)=1;(i)<=(n);i++)
#define rez(i,n) for(int (i)=0;(i)<(n);i++)
#define ET "\n"

class CRun{
private:
    struct {
        double L;
    }gv;
public:
    CRun(){}; ~CRun(){};
    void build(); void solve();
};

void CRun::build(){
    cin >> gv.L;
}

void CRun::solve(){
    double side = gv.L/3;
    cout << fixed << setprecision(12) << pow(side,3) << ET;
}


int main(){
    CRun run;
    run.build();
    run.solve();
}






##======================================python3
import sys
import collections
sys.setrecursionlimit(10**6)
input = sys.stdin.readline

class Run:
    def build(gv):
        gv.L = int(input())

    def solve(gv):
        side = gv.L / 3
        ans = side**3
        ans = round(ans, 12)
        print(ans)
        
if __name__ == '__main__':
    run = Run()
    run.build()
    run.solve()



/*******************************************c#
*********************************************/
using System; //Console, IComparable
using System.IO; //StreamWriter 
using System.Linq; //Select(), Where(), OrderBy(), Count()
using System.Collections.Generic; //List<T>
using System.Reflection; //PropertyInfo[], GetProperties[]
using static System.Console; 
using static NNN.CInput;

namespace NNN {
    public class CRun{
        private static class gv{
            public static double L = 0.0;
        }
    
        public void build(){            
            gv.L = _double;
        }
    
        public void solve(){ StreamWriter so = new StreamWriter(Console.OpenStandardOutput());
            var side = gv.L/3;
            var ans = Math.Pow(side,3);
            WriteLine(ans.ToString("F12"));
            
        }
    }

    class Program { 
        static void Main() { 
            var run = new CRun();
            run.build();
            run.solve();
        } 
    }

    public static class CInput{
        public static string _string{get{return Console.ReadLine();}}
        public static string[] _stringa{get{return (Console.ReadLine().Split());}}
        public static int _int{get{return int.Parse(Console.ReadLine());}}
        public static int[] _inta{get{return Console.ReadLine().Split().Select(x=>int.Parse(x)).ToArray();}}
        public static double _double{get{return double.Parse(Console.ReadLine());}}
        public static double[] _doublea{get{return Console.ReadLine().Split().Select(x=>double.Parse(x)).ToArray();}}
        public static long _long{get{return long.Parse(Console.ReadLine());}}
        public static long[] _longa{get{return Console.ReadLine().Split().Select(x=>long.Parse(x)).ToArray();}}    
    }
}
