// ===========================================
// 20.02.19 codforces 545C. Woodcutters
// 
// 
// ===========================================

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define ET "\n"
#define for0(i,n) for(int i = 0; i < n; i++)
#define for1(i,n) for(int i = 1; i <= n; i++)
#define CLR(arr) memset(arr, 0, sizeof(arr))
#define PAIR pair<int, int>
const int bz = 32;
const ll INF = 1LL << 50;



int main(){
    
    ios::sync_with_stdio(0); cin.tie(0);
    
    const int MAX = pow(10,5)+2;
    ll x[MAX];
    ll h[MAX];
    ll dp[MAX][3]; //0 = none, 1 = left, 2 = right
    
    
    
    int N; cin >> N;
    for1(i,N){
        cin >> x[i] >> h[i];
    }
    
    x[N+1] = INF; 
    if(N ==1){
        cout << "1"; return 0;
    }
    
    dp[1][0] = 0;
    dp[1][1] = 1;
    dp[1][2] = (x[1] + h[1] < x[2]);
    
    for(int i = 2; i <= N; i++){
        int chk(0);
        dp[i][0] = max({dp[i-1][0], 
                        dp[i-1][1], 
                        dp[i-1][2]
                    });
        
        dp[i][1] = max({dp[i-1][0] + (x[i] - h[i] > x[i-1]),
                        dp[i-1][1] + (x[i] - h[i] > x[i-1]),
                        dp[i-1][2] + (h[i] + h[i-1] < x[i] - x[i-1])
                    });
        
        dp[i][2] = max({dp[i-1][0] + (x[i] + h[i] < x[i+1]),
                        dp[i-1][1] + (x[i] + h[i] < x[i+1]),
                        dp[i-1][2] + (x[i] + h[i] < x[i+1])
                    });
    }
    
    cout << max({dp[N][0], dp[N][1], dp[N][2]}) << ET;
}

